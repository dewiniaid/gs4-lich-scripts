=begin
  Attempts to automatically fix common Lich issues.  Currently performed steps (in order) are:

  - Restarting Infomon
  - Doing ;magic reset, SPELL ACTIVE, SKILL FULL, and INFO
  - Loading and possibly downloading the map database if it is not already downloaded
      If this actually downloads the map database, it will be set to auto-update as well.
  - Restarting Uberbar, Uberbounty and invdb (and their variants) if they are running.

	  author: LostRanger (thisgenericname@gmail.com)
	  game: any
	  tags: utility
	  required: Lich >= 4.6.0.

  version: 0.2 (2019-11-19)

  changelog:
    version 0.2 (2019-11-19)
      Wait for Infomon to no longer be running before we attempt to restart it in order to reduce the likelihood of
      Schroedinger's Infomon (both alive and dead)

    version 0.1 (2019-11-08)
      Initial release.
=end

script.want_downstream = false
script.want_downstream_xml = true
clear


def quiet_command(command, start_pattern, end_pattern = /<prompt/, include_end = true, timeout=5)
    result = []
    name = 'fixit_reduces_screen_scroll'
    filter = false

    begin
        Timeout::timeout(timeout, Interrupt) {
            DownstreamHook.add(name, proc {|xml|
                if filter
                    if xml =~ end_pattern
                        DownstreamHook.remove(name)
                        filter = false
                        # result << xml.rstrip if include_end
                        # thread.raise(Interrupt)
                        # next(include_end ? nil : xml)
                    else
                        # result << xml.rstrip
                        next(nil)
                    end
                elsif xml =~ start_pattern
                    filter = true
                    # result << xml.rstrip
                    next(nil)
                else
                    xml
                end
            })
            fput command

            until (xml = get) =~ start_pattern; end
            result << xml.rstrip
            until (xml = get) =~ end_pattern
                result << xml.rstrip
            end
            if include_end
                result << xml.rstrip
            end
        }
    rescue Interrupt
        nil
    end
    return result
end


unless Script.running?("infomon")
    echo "Infomon was not running, which was probably your issue.  Starting it."
else
    echo "Restarting Infomon..."
    Script.kill("infomon")
    wait_while{Script.running?("infomon")}
end
Script.start("infomon")
wait_until{Script.running?("infomon")}

while spell = Spell.active.last
    spell.putdown
end
Spell.active.clear

echo "Making sure Infomon's information is up to date."
['spell active', 'skill full', 'info'].each do |cmd|
    quiet_command(cmd, /<output class="mono"|your current skill bonuses and ranks \(including all modifiers\) are:/)
end


unless Map.class_variable_get(:@@loaded)
    echo "Your map database does not appear to be loaded.  Attempting to load it."
    unless Map.load
        echo "Failed to load the map database.  Attempting to download it."
        Script.run("repository", "download-mapdb")
        Script.run("repository", "set-mapdb-updatable")
    end
end

# Restart some other scripts
scripts_to_restart = []
Script.list.each do |scr|
    n = scr.name
    if n =~ /^uberbar|^uberbounty|^invdb$/i
        scripts_to_restart << n
    end
end

if scripts_to_restart.length > 0
    # Uberspells creates scroll when it restarts, which we don't like.
    echo "Restarting script(s): #{scripts_to_restart.join(', ')}"
    scripts_to_restart.each{|n| Script.kill(n) }
    scripts_to_restart.each{|n| wait_while{Script.running?(n)}}
    scripts_to_restart.each{|n| Script.start(n)}
end

sleep 1.0

echo "I tried a few things!  Hopefully that fixes whatever your problem was."
echo "If it did not, you may find ;version helpful when reporting your issue."

exit
