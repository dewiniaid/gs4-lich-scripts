=begin
  Shows the route between your current room and the target room, or between two target rooms.

  Intended for troubleshooting mapDB issues

	  author: LostRanger (thisgenericname@gmail.com)
	  game: any
	  tags: utility
	  required: Lich >= 4.6.0.

  version: 0.2

  changelog:
    version 0.2  (2020-03-04)
      * Cleanup output to be more friendly and useable.
      * Actually add polish for release-quality scripts
      * Should now work with tags in addition to room numbers and descriptions.

    version 0.1  (2020-03-04)
      * First public release
=end

def find_room(what, src=nil)
    if what =~ /^\d+$/
        rm = Room[what]
        return rm if rm
        echo "Room ##{what} does not exist."
        exit
    end

    src ||= Room.current
    rm = src.find_nearest_by_tag(what)
    if rm
        rm = Room[rm]
        echo "Nearest room tagged '#{what}' is room ##{rm.id}"
        return rm
    end

    rm = Room[what]
    if rm
        echo "First room matching '#{what}' is room ##{rm.id}"
        return rm
    end

    echo "Could not find room '#{what}'"
    echo "Usage: #{$lich_char}#{Script.current.name} [source] target"
    exit
end


if script.vars[2]
    src = find_room(script.vars[1])
    tgt = find_room(script.vars[2], src)
elsif script.vars[1]
    src = Room.current
    unless src
        echo "Could not identify your current room."
        echo "Usage: #{$lich_char}#{script.name} [source] target"
        exit
    end
    tgt = find_room(script.vars[1])
else
    echo "Usage: #{$lich_char}#{script.name} [source] target"
    exit
end

# unless src
#     echo "Source room not found."
#     exit
# end
#
# unless tgt
#     echo "Target room not found."
#     exit
# end

if src.id == tgt.id
    echo "Source and target rooms match."
    exit
end

path = src.path_to(tgt)
unless path
    echo "Path from #{src.id} to #{tgt.id} not found"
    exit
end
path << tgt.id

total_time = 0
step = 0
time_mod = 0

msg = []

rm = src

msg << " STEP     TRIP       TIME  MOVE                               ROOM  NAME"
msg << "-----  ----------  ------  ------------------------------  -------  -------------------------------"

sid = "##{src.id}".rjust(7)
msg << "   0:                                                      #{sid}  #{src.title[0]}"



path.each do |id|
    id = id.to_s
    sid = "##{id}".rjust(7)
    wayto = rm.wayto[id]
    wayto = "(StringProc)" if wayto.is_a?(StringProc)
    if wayto.length > 30
        wayto = wayto[0..27] + "..."
    end
    wayto = wayto.ljust(30)


    timeto = rm.timeto[id]
    rm = Room[id]
    title = rm.title[0]
    step += 1
    if timeto.nil?
        stime = "<NIL>"
        time_mod |= 1
    elsif timeto.is_a?(StringProc)
        stime = "(proc)"
        time_mod |= 2
    else
        total_time += timeto
        stime = timeto.round(1).to_s
    end

    sstep = step.to_s.rjust(4)
    stime = stime.rjust(6)
    sttime = total_time.round(1).to_s.rjust(8)
    case time_mod
    when 1
        sttime += "+? "
    when 2
        sttime += "+P "
    when 3
        sttime += "+P?"
    else
        sttime += "   "
    end

    msg << "#{sstep}: #{sttime}  #{stime}  #{wayto}  #{sid}  #{title}"
end
respond msg
